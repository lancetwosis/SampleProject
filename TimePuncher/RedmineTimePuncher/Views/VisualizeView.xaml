<UserControl x:Class="RedmineTimePuncher.Views.VisualizeView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:behaviors="clr-namespace:RedmineTimePuncher.Behaviors"
             xmlns:behaviors1="clr-namespace:LibRedminePower.Behaviors;assembly=LibRedminePower"
             xmlns:charts="clr-namespace:RedmineTimePuncher.Views.Controls.Charts"
             xmlns:controls="clr-namespace:RedmineTimePuncher.ViewModels.Input.Controls"
             xmlns:controls1="clr-namespace:LibRedminePower.Views.Controls;assembly=LibRedminePower"
             xmlns:conv="clr-namespace:LibRedminePower.Converters;assembly=LibRedminePower"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:enums="clr-namespace:RedmineTimePuncher.Enums"
             xmlns:exHelpers="clr-namespace:TelerikEx.Helpers;assembly=TelerikEx"
             xmlns:extensions="clr-namespace:LibRedminePower.Extentions;assembly=LibRedminePower"
             xmlns:grid="clr-namespace:Telerik.Windows.Controls.GridView;assembly=Telerik.Windows.Controls.GridView"
             xmlns:helpers="clr-namespace:LibRedminePower.Helpers;assembly=LibRedminePower"
             xmlns:libCont="clr-namespace:LibRedminePower.Views.Controls;assembly=LibRedminePower"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:props="clr-namespace:RedmineTimePuncher.Properties"
             xmlns:styleselectors="clr-namespace:RedmineTimePuncher.Selectors"
             xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
             xmlns:telerik1="clr-namespace:Telerik.Windows.Controls;assembly=Telerik.Windows.Controls"
             xmlns:telerikExBehavior="clr-namespace:TelerikEx.Behaviors;assembly=TelerikEx"
             xmlns:telerikExHelper="clr-namespace:TelerikEx.Helpers;assembly=TelerikEx"
             xmlns:treeMap="clr-namespace:Telerik.Windows.Controls.TreeMap;assembly=Telerik.Windows.Controls.DataVisualization"
             xmlns:views="clr-namespace:LibRedminePower.Views;assembly=LibRedminePower"
             xmlns:visualizeEnums="clr-namespace:RedmineTimePuncher.ViewModels.Visualize.Enums"
             xmlns:vm="clr-namespace:RedmineTimePuncher.ViewModels.Visualize"
             d:DataContext="{d:DesignInstance {x:Type vm:VisualizeViewModel},
                                              IsDesignTimeCreatable=True}"
             d:DesignHeight="450"
             d:DesignWidth="800"
             mc:Ignorable="d">
    <libCont:OverwrapMessage Message="{Binding ErrorMessage.Value}">
        <telerik1:RadBusyIndicator IsBusy="{Binding IsBusy.IsBusy}"
                                   IsIndeterminate="True">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="AUTO" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <telerik:RadRibbonView Grid.Row="0"
                                       ApplicationButtonVisibility="Collapsed"
                                       HelpButtonVisibility="Collapsed"
                                       IsMinimized="{Binding Source={x:Static props:Settings.Default},
                                                             Path=RadRibbonViewIsMinimized,
                                                             Mode=TwoWay}"
                                       MinimizeButtonVisibility="Visible"
                                       TitleBarVisibility="Collapsed">
                    <telerik:RadRibbonView.Resources>
                        <Style BasedOn="{StaticResource {x:Type telerik:RadRibbonButton}}"
                               TargetType="telerik:RadRibbonButton">
                            <Setter Property="CollapseToMedium" Value="WhenGroupIsMedium" />
                            <Setter Property="CollapseToSmall" Value="WhenGroupIsSmall" />
                            <Setter Property="Size" Value="Large" />
                        </Style>
                    </telerik:RadRibbonView.Resources>
                    <telerik:RadRibbonView.Items>
                        <telerik:RadRibbonTab Header="{x:Static props:Resources.RibbonTabHome}">
                            <telerik:RadRibbonGroup Header="{x:Static props:Resources.VisualizeRibbonFilter}">
                                <telerik:RadRibbonButton helpers:ButtonSetupHelper.Data="{Binding GetTimeEntriesCommand}" />
                            </telerik:RadRibbonGroup>
                            <telerik:RadRibbonGroup Header="{x:Static props:Resources.VisualizeRibbonResult}">
                                <telerik:RadRibbonButton helpers:ButtonSetupHelper.Data="{Binding OpenResultCommand}" />
                                <telerik:RadRibbonButton helpers:ButtonSetupHelper.Data="{Binding SaveResultCommand}" />
                                <telerik:RadRibbonButton helpers:ButtonSetupHelper.Data="{Binding SaveAsResultCommand}" />
                                <telerik:Separator />
                                <telerik:RadRibbonButton helpers:ButtonSetupHelper.Data="{Binding UpdateTimeEntriesCommand}" />
                            </telerik:RadRibbonGroup>
                        </telerik:RadRibbonTab>
                    </telerik:RadRibbonView.Items>

                    <b:Interaction.Behaviors>
                        <behaviors1:RadRibbonViewIsMinimizedSettingAtLoadedBehavior />
                    </b:Interaction.Behaviors>

                </telerik:RadRibbonView>

                <Grid Grid.Row="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="AUTO" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <Grid Grid.Row="0">
                        <Grid.Resources>
                            <Style BasedOn="{StaticResource MyTextBlockStyle}"
                                   TargetType="TextBlock" />
                        </Grid.Resources>
                        <Expander Grid.Row="0"
                                  Background="AliceBlue"
                                  BorderBrush="{telerik1:Office2019Resource ResourceKey=AccentBorderBrush}"
                                  BorderThickness="1"
                                  Header="{Binding}"
                                  IsExpanded="{Binding Filters.IsExpanded.Value}">
                            <Expander.HeaderTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Margin="4"
                                                   FontSize="16"
                                                   FontWeight="Bold"
                                                   Foreground="{telerik1:Office2019Resource ResourceKey={x:Static telerik:Office2019ResourceKey.AccentBackgroundBrush}}"
                                                   Text="{x:Static props:Resources.VisualizeRibbonFilter}" />
                                        <charts:FilterLabelView Margin="5,0,0,0"
                                                                DataContext="{Binding Filters.SpecifyParentIssue}"
                                                                Visibility="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                                                                                                                    AncestorType=Expander},
                                                                                     Path=IsExpanded,
                                                                                     Converter={StaticResource InvertedBooleanToVisibilityConverter}}" />
                                        <charts:FilterLabelView Margin="5,0,0,0"
                                                                DataContext="{Binding Filters.SpecifyPeriod}"
                                                                Visibility="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                                                                                                                    AncestorType=Expander},
                                                                                     Path=IsExpanded,
                                                                                     Converter={StaticResource InvertedBooleanToVisibilityConverter}}" />
                                        <charts:FilterLabelView Margin="5,0,0,0"
                                                                DataContext="{Binding Filters.SpecifyUsers}"
                                                                Visibility="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                                                                                                                    AncestorType=Expander},
                                                                                     Path=IsExpanded,
                                                                                     Converter={StaticResource InvertedBooleanToVisibilityConverter}}" />
                                        <charts:FilterLabelView Margin="5,0,0,0"
                                                                DataContext="{Binding Filters.SpecifyProjects}"
                                                                Visibility="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                                                                                                                    AncestorType=Expander},
                                                                                     Path=IsExpanded,
                                                                                     Converter={StaticResource InvertedBooleanToVisibilityConverter}}" />
                                    </StackPanel>
                                </DataTemplate>
                            </Expander.HeaderTemplate>
                            <Grid Background="White">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="AUTO" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Grid Grid.Column="0"
                                      Margin="0,0,0,5">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="AUTO" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <GroupBox Margin="5,5,0,0"
                                              Background="{Binding Filters.SpecifyParentIssue.Background}">
                                        <GroupBox.Header>
                                            <CheckBox x:Name="parentIssueCheckBox"
                                                      Content="{x:Static props:Resources.VisualizeSpecifyParent}"
                                                      IsChecked="{Binding Filters.SpecifyParentIssue.IsEnabled.Value}" />
                                        </GroupBox.Header>
                                        <Grid Margin="0,3,0,0"
                                              IsEnabled="{Binding ElementName=parentIssueCheckBox,
                                                                  Path=IsChecked}">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="AUTO" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Text="{x:Static props:Resources.VisualizeIssueId}" />
                                            <TextBox Grid.Column="1"
                                                     Margin="5,0,0,0"
                                                     Text="{Binding Filters.SpecifyParentIssue.ParentIssueId.Value,
                                                                    UpdateSourceTrigger=PropertyChanged}"
                                                     TextAlignment="Right" />
                                            <telerik:RadButton Grid.Column="1"
                                                               Margin="10,0,0,0"
                                                               Padding="0"
                                                               HorizontalAlignment="Left"
                                                               VerticalAlignment="Center"
                                                               ClickMode="Press"
                                                               Command="{Binding Filters.SpecifyParentIssue.GoToTicketCommand}"
                                                               Style="{StaticResource GotoTicketButtonStyle}" />
                                        </Grid>
                                    </GroupBox>
                                    <GroupBox Grid.Row="1"
                                              Margin="5,5,0,0"
                                              Background="{Binding Filters.SpecifyPeriod.Background}">
                                        <GroupBox.Header>
                                            <CheckBox x:Name="periodCheckBox"
                                                      Content="{x:Static props:Resources.VisualizeSpecifyPeriod}"
                                                      IsChecked="{Binding Filters.SpecifyPeriod.IsEnabled.Value}" />
                                        </GroupBox.Header>
                                        <Grid IsEnabled="{Binding ElementName=periodCheckBox, Path=IsChecked}">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="AUTO" />
                                                <RowDefinition Height="AUTO" />
                                                <RowDefinition Height="AUTO" />
                                            </Grid.RowDefinitions>
                                            <RadioButton Margin="0,5,0,0"
                                                         Content="{x:Static props:Resources.VisualizePeriodLastWeek}"
                                                         GroupName="SpecifyPeriod"
                                                         IsChecked="{Binding Filters.SpecifyPeriod.PeriodMode.Value,
                                                                             Converter={StaticResource EnumToBooleanConverter},
                                                                             ConverterParameter=LastWeek}" />
                                            <RadioButton Grid.Row="1"
                                                         Margin="0,5,0,0"
                                                         Content="{x:Static props:Resources.VisualizePeriodLastMonth}"
                                                         GroupName="SpecifyPeriod"
                                                         IsChecked="{Binding Filters.SpecifyPeriod.PeriodMode.Value,
                                                                             Converter={StaticResource EnumToBooleanConverter},
                                                                             ConverterParameter=LastMonth}" />
                                            <StackPanel Grid.Row="2"
                                                        Margin="0,5,0,0"
                                                        Orientation="Horizontal">
                                                <RadioButton x:Name="specifyPeriodCheckBox"
                                                             GroupName="SpecifyPeriod"
                                                             IsChecked="{Binding Filters.SpecifyPeriod.PeriodMode.Value,
                                                                                 Converter={StaticResource EnumToBooleanConverter},
                                                                                 ConverterParameter=SpecifyPeriod}" />
                                                <TextBlock Margin="5,5,0,0"
                                                           Text="{x:Static props:Resources.VisualizeDateFrom}" />
                                                <telerik:RadDateTimePicker Margin="5,2,0,0"
                                                                           InputMode="DatePicker"
                                                                           IsEnabled="{Binding ElementName=specifyPeriodCheckBox,
                                                                                               Path=IsChecked}"
                                                                           SelectedDate="{Binding Filters.SpecifyPeriod.Start.Value,
                                                                                                  Mode=TwoWay}">
                                                    <telerik:RadDateTimePicker.CalendarStyle>
                                                        <Style BasedOn="{StaticResource RadCalendarStyle}"
                                                               TargetType="{x:Type telerik:RadCalendar}">
                                                            <Setter Property="AreWeekNumbersVisible" Value="False" />
                                                        </Style>
                                                    </telerik:RadDateTimePicker.CalendarStyle>
                                                </telerik:RadDateTimePicker>
                                                <TextBlock Margin="5,5,0,0"
                                                           Text="{x:Static props:Resources.VisualizeDateTo}" />
                                                <telerik:RadDateTimePicker Margin="5,2,0,0"
                                                                           InputMode="DatePicker"
                                                                           IsEnabled="{Binding ElementName=specifyPeriodCheckBox,
                                                                                               Path=IsChecked}"
                                                                           SelectedDate="{Binding Filters.SpecifyPeriod.End.Value,
                                                                                                  Mode=TwoWay}">
                                                    <telerik:RadDateTimePicker.CalendarStyle>
                                                        <Style BasedOn="{StaticResource RadCalendarStyle}"
                                                               TargetType="{x:Type telerik:RadCalendar}">
                                                            <Setter Property="AreWeekNumbersVisible" Value="False" />
                                                        </Style>
                                                    </telerik:RadDateTimePicker.CalendarStyle>
                                                </telerik:RadDateTimePicker>
                                            </StackPanel>

                                        </Grid>
                                    </GroupBox>

                                </Grid>

                                <Grid Grid.Column="1"
                                      Margin="0,0,5,5">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="AUTO" />
                                        <RowDefinition Height="AUTO" />
                                    </Grid.RowDefinitions>
                                    <GroupBox Grid.Row="0"
                                              Margin="5,5,0,0"
                                              Background="{Binding Filters.SpecifyUsers.Background}">
                                        <GroupBox.Header>
                                            <CheckBox x:Name="userCheckBox"
                                                      Content="{x:Static props:Resources.VisualizeSpecifyUser}"
                                                      IsChecked="{Binding Filters.SpecifyUsers.IsEnabled.Value}" />
                                        </GroupBox.Header>
                                        <views:ExpandableTwinListBox DataContext="{Binding Filters.SpecifyUsers.Users}"
                                                                     IsEnabled="{Binding ElementName=userCheckBox,
                                                                                         Path=IsChecked}" />
                                    </GroupBox>
                                    <GroupBox Grid.Row="1"
                                              Margin="5,5,0,0"
                                              Background="{Binding Filters.SpecifyProjects.Background}">
                                        <GroupBox.Header>
                                            <CheckBox x:Name="projectCheckBox"
                                                      Content="{x:Static props:Resources.VisualizeSpecifyProject}"
                                                      IsChecked="{Binding Filters.SpecifyProjects.IsEnabled.Value}" />
                                        </GroupBox.Header>
                                        <views:ExpandableTwinListBox DataContext="{Binding Filters.SpecifyProjects.Projects}"
                                                                     IsEnabled="{Binding ElementName=projectCheckBox,
                                                                                         Path=IsChecked}" />
                                    </GroupBox>
                                </Grid>
                            </Grid>
                        </Expander>

                    </Grid>

                    <Border Grid.Row="1"
                            BorderBrush="{telerik1:Office2019Resource ResourceKey=AccentBorderBrush}"
                            BorderThickness="1"
                            CornerRadius="2">
                        <Grid Grid.IsSharedSizeScope="True">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="AUTO" />
                                <RowDefinition Height="AUTO" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid Background="AliceBlue">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="AUTO"
                                                      SharedSizeGroup="First" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <TextBlock Margin="28,4,4,4"
                                           FontSize="16"
                                           FontWeight="Bold"
                                           Foreground="{telerik1:Office2019Resource ResourceKey={x:Static telerik:Office2019ResourceKey.AccentBackgroundBrush}}"
                                           Text="{x:Static props:Resources.VisualizeRibbonResult}" />
                                <StackPanel Grid.Column="1"
                                            Orientation="Horizontal">
                                    <Border Margin="5,3,0,3"
                                            BorderBrush="LightGray"
                                            BorderThickness="1"
                                            CornerRadius="5"
                                            ToolTip="{Binding Result.Model.CreateAt}"
                                            Visibility="{Binding Result.Model.HasValue,
                                                                 Converter={StaticResource BooleanToVisibilityConverter}}">
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Margin="5,0,0,0"
                                                       VerticalAlignment="Center"
                                                       Foreground="DimGray"
                                                       Text="{x:Static props:Resources.VisualizeDateGetAt}" />
                                            <TextBlock Margin="0,0,5,0"
                                                       VerticalAlignment="Center"
                                                       Foreground="DimGray"
                                                       Text="{Binding Result.Model.CreateAt,
                                                                      StringFormat=yy/MM/dd}" />
                                        </StackPanel>
                                    </Border>

                                    <charts:FilterLabelView Margin="5,0,0,0"
                                                            DataContext="{Binding Result.Filters.SpecifyParentIssue}"
                                                            Visibility="{Binding RelativeSource={RelativeSource Mode=Self},
                                                                                 Path=DataContext,
                                                                                 Converter={StaticResource NullToVisibilityConverter}}" />
                                    <charts:FilterLabelView Margin="5,0,0,0"
                                                            DataContext="{Binding Result.Filters.SpecifyPeriod}"
                                                            Visibility="{Binding RelativeSource={RelativeSource Mode=Self},
                                                                                 Path=DataContext,
                                                                                 Converter={StaticResource NullToVisibilityConverter}}" />
                                    <charts:FilterLabelView Margin="5,0,0,0"
                                                            DataContext="{Binding Result.Filters.SpecifyUsers}"
                                                            Visibility="{Binding RelativeSource={RelativeSource Mode=Self},
                                                                                 Path=DataContext,
                                                                                 Converter={StaticResource NullToVisibilityConverter}}" />
                                    <charts:FilterLabelView Margin="5,0,0,0"
                                                            DataContext="{Binding Result.Filters.SpecifyProjects}"
                                                            Visibility="{Binding RelativeSource={RelativeSource Mode=Self},
                                                                                 Path=DataContext,
                                                                                 Converter={StaticResource NullToVisibilityConverter}}" />
                                </StackPanel>
                            </Grid>

                            <Grid Grid.Row="1"
                                  Background="AliceBlue">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="AUTO"
                                                      SharedSizeGroup="First" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <TextBlock Margin="28,4,4,4"
                                           HorizontalAlignment="Right"
                                           FontSize="16"
                                           FontWeight="Bold"
                                           Foreground="{telerik1:Office2019Resource ResourceKey={x:Static telerik:Office2019ResourceKey.AccentBackgroundBrush}}"
                                           Text="{x:Static props:Resources.VisualizeFilter}" />
                                <StackPanel Grid.Column="1"
                                            Orientation="Horizontal">
                                    <Button Command="{Binding AddFilterCommand}"
                                            Style="{StaticResource GlyphButtonStyle}">
                                        <Button.Content>
                                            <telerik:RadGlyph Foreground="Green"
                                                              Glyph="&#xe120;" />
                                        </Button.Content>
                                    </Button>
                                    <ItemsControl Grid.Row="1"
                                                  ItemsSource="{Binding Result.ResultFilters.Items}">
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <StackPanel Orientation="Horizontal" />
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <charts:ResultFilterLabelView Margin="2,0,2,0"
                                                                              DataContext="{Binding}" />
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                </StackPanel>
                            </Grid>

                            <Grid Grid.Row="2">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="AUTO" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>

                                <telerik:RadTreeListView Grid.Row="2"
                                                         telerikExHelper:GridViewSelectionUtilities.SelectedItems="{Binding Result.SelectedTickets}"
                                                         AlternationCount="2"
                                                         AutoGenerateColumns="False"
                                                         CanUserDeleteRows="False"
                                                         CanUserFreezeColumns="False"
                                                         CanUserInsertRows="False"
                                                         HierarchyIndent="10"
                                                         IsExpandedBinding="{Binding IsExpanded,
                                                                                     Mode=TwoWay}"
                                                         IsFilteringAllowed="False"
                                                         IsReadOnly="True"
                                                         ItemsSource="{Binding Result.Tickets}"
                                                         RowIndicatorVisibility="Collapsed"
                                                         SelectionMode="Extended"
                                                         SelectionUnit="FullRow"
                                                         ShowGroupPanel="False">
                                    <telerik:RadTreeListView.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Command="{Binding ExpandCommand}"
                                                      Header="{x:Static props:Resources.VisualizeTicketTreeCmdExpand}" />
                                            <MenuItem Command="{Binding ExpandRecursiveCommand}"
                                                      Header="{x:Static props:Resources.VisualizeTicketTreeCmdExpandRecursive}" />
                                            <MenuItem Command="{Binding CollapseCommand}"
                                                      Header="{x:Static props:Resources.VisualizeTicketTreeCmdCollapse}" />
                                            <MenuItem Command="{Binding CollapseRecursiveCommand}"
                                                      Header="{x:Static props:Resources.VisualizeTicketTreeCmdCollapse}" />
                                            <Separator />
                                            <MenuItem Command="{Binding ExpandAllCommand}"
                                                      Header="{x:Static props:Resources.VisualizeTicketTreeCmdExpandAll}" />
                                            <MenuItem Command="{Binding CollapseAllCommand}"
                                                      Header="{x:Static props:Resources.VisualizeTicketTreeCmdCollapseAll}" />
                                            <Separator />
                                            <MenuItem Command="{Binding EnableCommand}"
                                                      Header="{x:Static props:Resources.VisualizeTicketTreeCmdAddAggregate}" />
                                            <MenuItem Command="{Binding EnableRecursiveCommand}"
                                                      Header="{x:Static props:Resources.VisualizeTicketTreeCmdAddAggregateRecursive}" />
                                            <MenuItem Command="{Binding DisableCommand}"
                                                      Header="{x:Static props:Resources.VisualizeTicketTreeCmdExcludeAggregate}" />
                                            <MenuItem Command="{Binding DisableRecursiveCommand}"
                                                      Header="{x:Static props:Resources.VisualizeTicketTreeCmdExcludeAggregateRecursive}" />
                                        </ContextMenu>
                                    </telerik:RadTreeListView.ContextMenu>
                                    <telerik:RadTreeListView.ChildTableDefinitions>
                                        <telerik:TreeListViewTableDefinition ItemsSource="{Binding Children}" />
                                    </telerik:RadTreeListView.ChildTableDefinitions>
                                    <telerik:RadTreeListView.Columns>
                                        <telerik:GridViewDataColumn DataMemberBinding="{Binding IsEnabled.Value}"
                                                                    EditTriggers="CellClick"
                                                                    IsReadOnly="True"
                                                                    IsSortable="False">
                                            <telerik:GridViewDataColumn.Header>
                                                <Grid>
                                                    <TextBlock Margin="0,3,0,0"
                                                               HorizontalAlignment="Left"
                                                               Text="{x:Static props:Resources.VisualizeTicket}"
                                                               TextAlignment="Center" />
                                                    <Button HorizontalAlignment="Right"
                                                            Command="{Binding ScrollToSelectedRowCommand}"
                                                            CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                                                                                                                      AncestorType={x:Type telerik:RadTreeListView}}}"
                                                            DataContext="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                                                                                                                 AncestorType={x:Type telerik:RadTreeListView}},
                                                                                  Path=DataContext}"
                                                            Style="{StaticResource GlyphButtonStyle}"
                                                            ToolTip="{x:Static props:Resources.VisualizeTicketTreeCmdScroll}">
                                                        <Button.Content>
                                                            <telerik:RadGlyph FontSize="13"
                                                                              Glyph="{StaticResource GlyphZoom}" />
                                                        </Button.Content>
                                                    </Button>
                                                </Grid>
                                            </telerik:GridViewDataColumn.Header>
                                            <telerik:GridViewDataColumn.CellTemplate>
                                                <DataTemplate>
                                                    <StackPanel Orientation="Horizontal"
                                                                ToolTip="{Binding Tooltip}">
                                                        <CheckBox IsChecked="{Binding IsEnabled.Value, Mode=TwoWay}" />
                                                        <telerik:RadHyperlinkButton Margin="5,0,0,0"
                                                                                    Content="{Binding Label}"
                                                                                    NavigateUri="{Binding Url}"
                                                                                    Style="{StaticResource myRadHyperlinkButtonStyle}" />
                                                    </StackPanel>
                                                </DataTemplate>
                                            </telerik:GridViewDataColumn.CellTemplate>
                                        </telerik:GridViewDataColumn>
                                    </telerik:RadTreeListView.Columns>
                                    <b:Interaction.Behaviors>
                                        <telerikExBehavior:GridViewSelectionBehavior />
                                    </b:Interaction.Behaviors>
                                </telerik:RadTreeListView>

                                <Grid Grid.Column="1"
                                      Margin="5,0,0,0">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="AUTO" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <StackPanel Orientation="Horizontal">
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock VerticalAlignment="Center"
                                                       Text="{x:Static props:Resources.VisualizeType}" />
                                            <telerik:RadComboBox Margin="5,0,0,0"
                                                                 ItemsSource="{Binding Source={extensions:EnumBindingSource {x:Type visualizeEnums:ViewType}}}"
                                                                 SelectedItem="{Binding Result.ViewType.Value}" />
                                        </StackPanel>
                                        <charts:FactorSelectorView Margin="5,0,0,0"
                                                                   DataContext="{Binding Result.BarChart.XAxisType}" />
                                        <charts:FactorSelectorView Margin="5,0,0,0"
                                                                   DataContext="{Binding Result.BarChart.CombineType}" />
                                        <charts:FactorSelectorView Margin="5,0,0,0"
                                                                   DataContext="{Binding Result.BarChart.SortType}" />
                                        <charts:FactorSelectorView Margin="5,0,0,0"
                                                                   DataContext="{Binding Result.BarChart.ShowTotal}" />

                                        <charts:FactorSelectorView Margin="5,0,0,0"
                                                                   DataContext="{Binding Result.PieChart.CombineType}" />
                                        <charts:FactorSelectorView Margin="5,0,0,0"
                                                                   DataContext="{Binding Result.PieChart.SecondCombineType}" />
                                        <charts:FactorSelectorView Margin="5,0,0,0"
                                                                   DataContext="{Binding Result.PieChart.SortType}" />
                                        <charts:FactorSelectorView Margin="5,0,0,0"
                                                                   DataContext="{Binding Result.PieChart.ShowTotal}" />

                                        <charts:FactorSelectorView Margin="5,0,0,0"
                                                                   DataContext="{Binding Result.TreeMap.FirstGroupingType}" />
                                        <charts:FactorSelectorView Margin="5,0,0,0"
                                                                   DataContext="{Binding Result.TreeMap.SecondGroupingType}" />
                                        <charts:FactorSelectorView Margin="5,0,0,0"
                                                                   DataContext="{Binding Result.TreeMap.ThirdGroupingType}" />
                                    </StackPanel>

                                    <charts:BarChartView Grid.Row="1"
                                                         DataContext="{Binding Result.BarChart}"
                                                         Visibility="{Binding IsEnabled.Value,
                                                                              Converter={StaticResource BooleanToVisibilityConverter}}" />

                                    <charts:PieChartView Grid.Row="1"
                                                         DataContext="{Binding Result.PieChart}"
                                                         Visibility="{Binding IsEnabled.Value,
                                                                              Converter={StaticResource BooleanToVisibilityConverter}}" />

                                    <charts:TreeMapView Grid.Row="1"
                                                        DataContext="{Binding Result.TreeMap}"
                                                        Visibility="{Binding IsEnabled.Value,
                                                                             Converter={StaticResource BooleanToVisibilityConverter}}" />

                                </Grid>
                            </Grid>

                        </Grid>
                    </Border>
                </Grid>

            </Grid>
        </telerik1:RadBusyIndicator>
    </libCont:OverwrapMessage>
</UserControl>
